{"version":3,"names":[],"mappings":"","sources":["page/index.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function(){\r\n  class index extends parent{\r\n    constructor(){\r\n      super()\r\n      \r\n      this.state = {\r\n        $list: $('#js-page'),\r\n        arr: []\r\n      }\r\n\t\t\t\r\n      // 初始化\r\n      this.init()\r\n    }\r\n    async init(){\r\n      // 加载前 - 用于请求数据\r\n      await this.load()\r\n\r\n      // 加载后 - 用于绑定事件\r\n      this.ready()\r\n    }\r\n    async load(){\r\n      const data = await this.fetchData()\r\n\r\n      this.state.arr = data.data\r\n      this.render(this.state.arr)\r\n    }\r\n    ready(){\r\n\t\t\t\r\n    }\r\n    fetchData(){\r\n      return this.fetch({\r\n        method: 'get',\r\n        url: `${this.baseUriApi}/topics`,\r\n        params: {\r\n          limit: 10\r\n        }\r\n      })\r\n    }\r\n    createListFragment(arr){\r\n      let fragment = document.createDocumentFragment()\r\n      arr.forEach((v) => {\r\n        let html = `\r\n          <div>${v.title}</div>\r\n        `\r\n        fragment.appendChild($(html)[0])\r\n      })\r\n\r\n      return fragment\r\n    }\r\n    render(arr){\r\n      let fragment = this.createListFragment(arr)\r\n      this.state.$list.append(fragment)\r\n    }\r\n  }\r\n\r\n  new index()\r\n})\r\n"],"file":"index.js"}